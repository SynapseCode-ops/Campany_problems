

class Solution {
public:
    string lexGreaterPermutation(string s, string t) {
        int n = s.size();
        multiset<char> chs;
        for(char x : s) chs.insert(x);
        
        vector<string> ans;
        string pref = "";
        for(int i = 0; i < n; i++) {
            auto gt = chs.upper_bound(t[i]);
            if(gt != chs.end()) {
                char val = *gt;
                string temp = pref;
                temp.push_back(val);
                chs.erase(gt);
                for(char x : chs) temp.push_back(x);
                chs.insert(val);
                ans.push_back(temp);
            }
            auto nxt = chs.find(t[i]);
            if(nxt == chs.end()) break;
            pref.push_back(*nxt);
            chs.erase(nxt);
        }
        if(ans.size() == 0) return "";
        return *min_element(ans.begin(), ans.end());
    }
};

